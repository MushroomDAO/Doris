name: Test Doris Protocol v0.1

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Install pnpm
      run: npm install -g pnpm
      
    - name: Install dependencies
      run: pnpm install
      
    - name: Run linting
      run: pnpm run lint
      
    - name: Run unit tests
      run: pnpm run test
      env:
        NODE_ENV: test
        
    - name: Run integration tests
      run: pnpm run test:integration
      env:
        NODE_ENV: test
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Test build process
      run: pnpm run build:test
      
    - name: Test script functionality
      run: |
        # Test generate-post script
        echo -e "Test Post\ndaily\n" | node scripts/generate-post.js || true
        
        # Test update-sidebar script
        node scripts/update-sidebar.js || true
        
        # Verify test files were created
        ls -la docs/posts/ || echo "No posts directory found"
        
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install pnpm
      run: npm install -g pnpm
      
    - name: Install dependencies
      run: pnpm install
      
    - name: Run ESLint
      run: pnpm run lint
      
    - name: Check code formatting
      run: pnpm run format:check
      
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install pnpm
      run: npm install -g pnpm
      
    - name: Install dependencies
      run: pnpm install
      
    - name: Run security audit
      run: pnpm audit
      
    - name: Check for known vulnerabilities
      run: pnpm run security:check
      
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: Install pnpm
      run: npm install -g pnpm
      
    - name: Install dependencies
      run: pnpm install
      
    - name: Test documentation build
      run: |
        # Start docsify server in background
        pnpm run serve:docs &
        DOCS_PID=$!
        
        # Wait for server to start
        sleep 5
        
        # Test if documentation is accessible
        curl -f http://localhost:3000 || exit 1
        
        # Kill the background process
        kill $DOCS_PID
        
    - name: Test web interface
      run: |
        # Start web server in background
        pnpm run dev &
        WEB_PID=$!
        
        # Wait for server to start
        sleep 5
        
        # Test if web interface is accessible
        curl -f http://localhost:3001 || exit 1
        
        # Kill the background process
        kill $WEB_PID 